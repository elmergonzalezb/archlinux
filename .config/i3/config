# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout somewhen, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference

set $mod Mod4
set $tabKey Mode_switch

# layout mode for new container
# workspace_layout default

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
#font pango:DejaVu Sans Mono 10
font pango:Meslo LG S DZ for Powerline 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal;

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -i -nb '#859900' -nf '#eee8d5' -sb '#cb4b16' -fn 'Meslo LG S DZ for Powerline-10' -h 24
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# cycle throw workspace
bindsym $mod+Shift+Left workspace prev
bindsym $mod+Shift+Right workspace next

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace console; layout splith; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title console' ) -eq 2 ] && urxvt -title console
bindsym $mod+2 workspace web; layout tabbed; exec [ $(ps h -C vimb | wc -l) = 0 ] && /usr/bin/vimb
bindsym $mod+3 workspace vim; layout splith; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title uvim -e vim' ) -eq 2 ] && urxvt -title uvim -e vim
bindsym $mod+4 workspace graphic
bindsym $mod+5 workspace mail-JIT; layout tabbed; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title muttjit -e mutt' ) -eq 2 ] && urxvt -title muttjit -e mutt -e "source ~/.mutt/jobintree.com"
bindsym $mod+6 workspace mail-Perso; layout tabbed; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title muttperso -e mutt' ) -eq 2 ] && urxvt -title muttperso -e mutt -e "source ~/.mutt/gmail.com"
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace console
bindsym $mod+Shift+2 move container to workspace web
bindsym $mod+Shift+3 move container to workspace vim
bindsym $mod+Shift+4 move container to workspace graphic
bindsym $mod+Shift+5 move container to workspace mail-JIT
bindsym $mod+Shift+6 move container to workspace mail-Perso
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  font pango:Meslo LG S DZ for Powerline, icons, FontAwesome, 10
  status_command python ~/.config/i3/status.py
	position top
  colors {
    separator #93a1a1
    background #002b36
    statusline #93a1a1
    focused_workspace #eee8d5 #859900 #eee8d5
    active_workspace #fdf6e3 #6c71c4 #fdf6e3
    inactive_workspace #073642 #eee8d5 #002b36
    urgent_workspace #d33682 #d33682 #fdf6e3
  }
}

hide_edge_borders both

#floating window
bindsym $mod+t floating toggle

#scratchpad
bindsym $mod+m move scratchpad
bindsym $mod+o scratchpad show

#automatic back-and-forth switch workspace
workspace_auto_back_and_forth yes

#twitter
for_window [title="Twitter"] move right; resize shrink left 30 px or 30 ppt;
for_window [title="david_adsnovo - Skype*"] focus; move right; resize shrink left 20 px or 20 ppt; layout stacking;

for_window [class="uvim"] border 1pixel
for_window [class="URxvt"] border 1pixel
for_window [class="Dwb"] border 1pixel
#for_window [class="Vimb"] border 1pixel
for_window [class="Gvim"] border 1pixel

# start a firefox
bindsym $tabKey+Return exec Vimb

# assign graphic app to dedicated workspace
assign [class="(pinta|Inkscpae)"] graphic
for_window [class="(pinta|Inkscape)"] focus
assign [class="Dwb"] web
for_window [class="Dwb"] focus
#assign [class="Vimb"] web
#for_window [class="Vimb"] layout tabbed; focus
#assign [class="Urxvt"] console
#for_window [class="Urxvt"] layout splith; focus
for_window [title="vimwiki_scratchpad"] move scratchpad; scratchpad show
for_window [title="vimb_scratchpad"] move scratchpad; scratchpad show

client.focused #859900 #859900 #eee8d5 #859900
client.focused_inactive #073642 #073642 #586e75 #6c71c4
client.unfocused #073642 #073642 #93a1a1 #586e75
client.urgent #d33682 #d33682 #fdf6e3 #dc322f

# Enable/disable logging
bindsym $mod+x shmlog toggle

bindsym $tabKey+w exec [ $( ps -eo cmd | grep -c '[u]rxvt -title vimwiki_scratchpad -e vim -c VimwikiIndex' ) -eq 2 ] && urxvt -title vimwiki_scratchpad -e vim -c VimwikiIndex;
bindsym $tabKey+i exec [ $( ps -eo cmd | grep -c '[u]rxvt -title vimwiki_scratchpad -e vim -c VimwikiDiaryIndex' ) -eq 2 ] && urxvt -title vimwiki_scratchpad -e vim -c VimwikiDiaryIndex;
bindsym $tabKey+v exec [ $( ps -eo cmd | grep -c '[u]rxvt -title vimb_scratchpad -e vim ~/.config/vimb/config' ) -eq 2 ] && urxvt -title vimb_scratchpad -e vim ~/.config/vimb/config;
exec [ $( ps -eo cmd | grep -c '[u]rxvt -title console' ) -eq 2 ] && urxvt -title console
#focus; move scratchpad; scratchpad show
